git init <name> ---------> Initialize a local repository
git init -b main ---------> Initialize the local directory as a Git repository with branch main
git clone https://github.com/Username/Repository ---------> Clone a repository in GitHub
git clone https://github.com/Username/Repository . ---------> Clone a repository in GitHub without project folder
git status ---------> Check the status of the local repository
git add <file> ---------> Add files to the temp commit area
git add -A ---------> Stages all changes
git add . ---------> Stages new files and modifications, without deletions
git add -u ---------> Stages modifications and deletions, without new files
git commit -m “message” ---------> Commit the changed files with annotation
git push ---------> Push the commit to the default remote repository
git push --set-upstream <remote_name> <branch_name> ---------> Push the commit to the selected repository and set this remote and branch as the unique upstream (you can use -u instead of --set-upstream)
git pull ---------> Pull the files from the remote repository
git remote -v ---------> Check remote repository list
git remote add <name> <remote_url> ---------> Add a remote repository with a name
git remote set-url <name> <remote_url> ---------> Change a remote's URL
touch <file> ---------> Create a file
git branch ---------> Check all the branches
git branch <name> ---------> Create a branch with a name
git checkout <name> ---------> Switch to that branch
git branch --set-upstream-to <remote_name>/<remote_branch_name> ---------> Set the branch's upstream (you can use -u instead of --set-upstream-to)
git branch -vv ---------> Find out which remote branch a local branch is tracking
git branch -d <name> ---------> Delete a branch locally
git push <remote_name> --delete <remote_branch_name> ---------> Delete branch remotely
git merge <branch-name> ---------> Merge the selected branch to the current branch
git rm --cached <file_name> ---------> Remove file from the index instead of deleting the real file in the local system
git rm -r --cached <folder_name> ---------> Remove folder from the index instead of deleting the real folder in the local system
git submodule add <repository_url> <path_name> ---------> Add the given repository as a submodule at the giver path
git reset <file> ---------> Undo the specific file which you stage before commit
git reset ---------> Undo all git add files
git difftool --dir-diff ---------> Show unstaged changes (don't show new files)
git difftool --cached --dir-diff ---------> Show staged changes (do show new files)
git difftool HEAD~ --dir-diff ---------> Compare the difference between HEAD~ and HEAD
git difftool <branch_1>..<branch_2> --dir-diff ---------> Compare two branches in git
